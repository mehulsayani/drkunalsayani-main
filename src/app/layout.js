import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar/Navbar";
import Footer from "@/components/Footer";
import { Inter, Poppins, DM_Serif_Display } from "next/font/google";
import Script from "next/script"; // ✅ IMPORT THIS
import CTA from "@/components/CTA";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { Marcellus } from 'next/font/google'
import { MdKeyboardArrowDown } from "react-icons/md";
import Link from "next/link";
import ScrollTop from "@/components/ScrollTop";

const marcellus = Marcellus({
  subsets: ['latin'],
  weight: '400', // Marcellus has only one weight
  display: 'swap',
   variable: '--font-marcellus',
})

const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });
const poppins = Poppins({
  subsets: ["latin"],
  weight: ["400", "600", "700"],
  variable: "--font-poppins",
});
// export const dmSerifDisplay = DM_Serif_Display({
//   subsets: ["latin"],
//   weight: "400", // only one weight is available
//   variable: "--font-dm-serif-display",
//   display: "swap",
// });

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "drkunalsayani",
  description: "Generated by create next app",
};
 const submenus = [
      {
      title: "Hair",
      items: [
        "Hair Transplant",
        "Hair Restoration – PRP/GFC/Exosomes",
        "Nano fat injection (SVC) for Hair Growth",
      ],
    },
    {
      title: "Face",
      items: [
        "Rhinoplasty (Nose job)",
        "Eyelid Surgery (Blepharoplasty)",
        "Prominent Ear Surgery (Otoplasty)",
        "Facelift",
        "Thread Lift Treatment",
        "Chin Augmentation",
        "Jawline Contouring",
        "Lip Lift (Lip job)",
        "Lipoma/Cysts/Scars",
      ],
    },
    {
      title: "Breast",
      items: [
        "Breast Augmentation",
        "Breast Lift (mastopexy) with Shaping",
        "Breast Reduction & Axillary Breasts Excision",
      ],
    },
    {
      title: "Body",
      items: [
        "Tummy Tuck (Abdominoplasty)",
        "Liposuction",
        "Buttock Augmentation (BBL)",
        "Fat Grafting",
      ],
    },

    {
      title: "Mommy Makeover",
      items: [
        "Post-Pregnancy Tummy Tuck (moms)",
        "Breast Lift & Augmentation after Pregnancy",
        "Genital Cosmetic Surgeries",
        "Mommy Makeover Package (custom combination of procedures)",
      ],
    },

    {
      title: "Non Surgical",
      items: [
        "Botox (wrinkles/anti-ageing)",
        "Dermal Fillers",
        "Laser Skin Rejuvenation",
        "Microneedling & PRP for Skin Rejuvenation",
        "Skin Tightening",
      ],
    },

    {
      title: "Men",
      items: [
        "Gynaecomastia",
        "Liposuction",
        "Hair Loss Treatment",
        "Hair Transplant",
        "Face > Rhinoplasty (Nose job)",
        "Eyelid Surgery (Blepharoplasty)",
        "Prominent Ear Surgery (Otoplasty)",
        "Facelift",
        "Thread Lift Treatment",
        "Chin Augmentation",
        "Jawline Contouring",
        "Lip Lift (Lip job)",
        "Lipoma/Cysts/Scars",
      ],
    },
  ];

export default function RootLayout({ children }) {
  
  return (
    <html lang="en">
      <head />
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* ✅ Microsoft Clarity Script */}
        <Script id="clarity-script" strategy="afterInteractive">
          {`
            (function(c,l,a,r,i,t,y){
              c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
              t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
              y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
            })(window, document, "clarity", "script", "rnj6hajak3");
          `}
        </Script>

        <Navbar />
         {/* second level menus */}
      <div className="w-full border-t sticky top-0 z-100 bg-white text-md max-lg:hidden py-2 shadow">
        <div className="max-w-7xl mx-auto flex justify-evenly items-center h-10">
          {/* Dropdown Menu Item */}
          {submenus.map((section, index) => (
            <div key={index} className="relative group cursor-pointer">
              <span
                className="hover:text-[#1AAEBC] duration-500 text-gray-700 font-semibold
                      relative flex cursor-pointer overflow-hidden after:content-[''] justify-center items-center
                      after:absolute after:bottom-0 after:left-0 after:w-full after:h-[2px] 
                      after:bg-[#1AAEBC] after:rounded-[10px] after:scale-x-0 after:origin-right 
                      after:transition-transform after:duration-400 hover:after:scale-x-100 hover:after:origin-left"
              >
                {section.title}
                <MdKeyboardArrowDown className="transform transition-transform text-xl duration-300 group-hover:rotate-180" />
              </span>

              <div className="absolute left-1/2 transform -translate-x-1/2 hidden group-hover:block bg-white shadow-lg rounded-lg w-72 z-10">
                <div className="flex flex-col py-2 px-4 space-y-2 max-h-96 overflow-y-auto">
                  {section.items.map((item, i) => {
                    if (typeof item === "string") {
                      // Normal item without submenu
                      return (
                        <Link
                          key={i}
                          href={`/services/${section.title
                            .toLowerCase()
                            .replace(/ /g, "-")}/${item
                            .toLowerCase()
                            .replace(/ /g, "-")}`}
                          className="hover:text-[#40AEB9] transition-colors cursor-pointer"
                        >
                          {item}
                        </Link>
                      );
                    } else if (typeof item === "object" && item.submenu) {
                      // Item with submenu (for Face -> Rhinoplasty)
                      return (
                        <div key={i} className="relative group">
                          <div className="flex justify-between items-center hover:text-[#40AEB9] transition-colors cursor-pointer">
                            <span>{item.name}</span>
                            <span className="ml-2">&#9656;</span>{" "}
                            {/* right arrow */}
                          </div>

                          {/* Nested submenu */}
                          <div className="absolute top-0 left-full ml-1 hidden group-hover:block bg-white shadow-lg rounded-lg w-64 z-20">
                            <div className="flex flex-col py-2 px-4 space-y-2 max-h-96 overflow-y-auto">
                              {item.submenu.map((subitem, si) => (
                                <div
                                  key={si}
                                  className="hover:text-[#40AEB9] transition-colors cursor-pointer"
                                >
                                  {subitem}
                                </div>
                              ))}
                            </div>
                          </div>
                        </div>
                      );
                    }
                  })}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
        
        <main>{children}</main>
        <ScrollTop />
        
        <Footer />
        <CTA />
      </body>
    </html>
  );
}
